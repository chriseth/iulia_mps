package IULIA.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BaseStructureAspectDescriptor;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import java.util.Collection;
import java.util.Arrays;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.runtime.impl.ConceptDescriptorBuilder2;

public class StructureAspectDescriptor extends BaseStructureAspectDescriptor {
  /*package*/ final ConceptDescriptor myConceptBlock = createDescriptorForBlock();
  /*package*/ final ConceptDescriptor myConceptExpression = createDescriptorForExpression();
  /*package*/ final ConceptDescriptor myConceptFunctionCall = createDescriptorForFunctionCall();
  /*package*/ final ConceptDescriptor myConceptFunctionDeclaration = createDescriptorForFunctionDeclaration();
  /*package*/ final ConceptDescriptor myConceptNumberLiteral = createDescriptorForNumberLiteral();
  /*package*/ final ConceptDescriptor myConceptStatement = createDescriptorForStatement();
  /*package*/ final ConceptDescriptor myConceptTypeName = createDescriptorForTypeName();
  /*package*/ final ConceptDescriptor myConceptVariable = createDescriptorForVariable();
  /*package*/ final ConceptDescriptor myConceptVariableDeclaration = createDescriptorForVariableDeclaration();
  /*package*/ final ConceptDescriptor myConceptVariableReference = createDescriptorForVariableReference();
  private final LanguageConceptSwitch myConceptIndex;

  public StructureAspectDescriptor() {
    myConceptIndex = new LanguageConceptSwitch();
  }

  @Override
  public Collection<ConceptDescriptor> getDescriptors() {
    return Arrays.asList(myConceptBlock, myConceptExpression, myConceptFunctionCall, myConceptFunctionDeclaration, myConceptNumberLiteral, myConceptStatement, myConceptTypeName, myConceptVariable, myConceptVariableDeclaration, myConceptVariableReference);
  }

  @Override
  @Nullable
  public ConceptDescriptor getDescriptor(SConceptId id) {
    switch (myConceptIndex.index(id)) {
      case LanguageConceptSwitch.Block:
        return myConceptBlock;
      case LanguageConceptSwitch.Expression:
        return myConceptExpression;
      case LanguageConceptSwitch.FunctionCall:
        return myConceptFunctionCall;
      case LanguageConceptSwitch.FunctionDeclaration:
        return myConceptFunctionDeclaration;
      case LanguageConceptSwitch.NumberLiteral:
        return myConceptNumberLiteral;
      case LanguageConceptSwitch.Statement:
        return myConceptStatement;
      case LanguageConceptSwitch.TypeName:
        return myConceptTypeName;
      case LanguageConceptSwitch.Variable:
        return myConceptVariable;
      case LanguageConceptSwitch.VariableDeclaration:
        return myConceptVariableDeclaration;
      case LanguageConceptSwitch.VariableReference:
        return myConceptVariableReference;
      default:
        return null;
    }
  }

  /*package*/ int internalIndex(SAbstractConcept c) {
    return myConceptIndex.index(c);
  }

  private static ConceptDescriptor createDescriptorForBlock() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("IULIA", "Block", 0x9a2567510ab846dfL, 0x90914d2e5bd895b0L, 0x466a47dd28404d01L);
    b.class_(false, false, true);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x11f1e14d895L);
    b.origin("r:fdfa5c3c-8d64-4e59-a359-f071b87f87b9(IULIA.structure)/5073946945374932225");
    b.aggregate("statements", 0x466a47dd284057baL).target(0x9a2567510ab846dfL, 0x90914d2e5bd895b0L, 0x466a47dd284057b9L).optional(true).ordered(true).multiple(true).origin("5073946945374934970").done();
    b.alias("block");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForExpression() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("IULIA", "Expression", 0x9a2567510ab846dfL, 0x90914d2e5bd895b0L, 0x466a47dd28405750L);
    b.class_(false, false, false);
    b.super_("IULIA.structure.Statement", 0x9a2567510ab846dfL, 0x90914d2e5bd895b0L, 0x466a47dd284057b9L);
    b.origin("r:fdfa5c3c-8d64-4e59-a359-f071b87f87b9(IULIA.structure)/5073946945374934864");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForFunctionCall() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("IULIA", "FunctionCall", 0x9a2567510ab846dfL, 0x90914d2e5bd895b0L, 0x466a47dd2840580aL);
    b.class_(false, false, false);
    b.super_("IULIA.structure.Expression", 0x9a2567510ab846dfL, 0x90914d2e5bd895b0L, 0x466a47dd28405750L);
    b.origin("r:fdfa5c3c-8d64-4e59-a359-f071b87f87b9(IULIA.structure)/5073946945374935050");
    b.prop("functionName", 0x466a47dd28405833L, "5073946945374935091");
    b.associate("function", 0x466a47dd2840580eL).target(0x9a2567510ab846dfL, 0x90914d2e5bd895b0L, 0x466a47dd284057b8L).optional(false).origin("5073946945374935054").done();
    b.aggregate("parameters", 0x466a47dd2840582eL).target(0x9a2567510ab846dfL, 0x90914d2e5bd895b0L, 0x466a47dd28405750L).optional(true).ordered(true).multiple(true).origin("5073946945374935086").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForFunctionDeclaration() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("IULIA", "FunctionDeclaration", 0x9a2567510ab846dfL, 0x90914d2e5bd895b0L, 0x466a47dd284057b8L);
    b.class_(false, false, false);
    b.super_("IULIA.structure.Statement", 0x9a2567510ab846dfL, 0x90914d2e5bd895b0L, 0x466a47dd284057b9L);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:fdfa5c3c-8d64-4e59-a359-f071b87f87b9(IULIA.structure)/5073946945374934968");
    b.aggregate("parameters", 0x466a47dd284057e2L).target(0x9a2567510ab846dfL, 0x90914d2e5bd895b0L, 0x466a47dd284057c1L).optional(true).ordered(true).multiple(true).origin("5073946945374935010").done();
    b.aggregate("returnParameters", 0x466a47dd284057e5L).target(0x9a2567510ab846dfL, 0x90914d2e5bd895b0L, 0x466a47dd284057c1L).optional(true).ordered(true).multiple(true).origin("5073946945374935013").done();
    b.aggregate("body", 0x466a47dd284057eaL).target(0x9a2567510ab846dfL, 0x90914d2e5bd895b0L, 0x466a47dd28404d01L).optional(false).ordered(true).multiple(false).origin("5073946945374935018").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForNumberLiteral() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("IULIA", "NumberLiteral", 0x9a2567510ab846dfL, 0x90914d2e5bd895b0L, 0x466a47dd2841596aL);
    b.class_(false, false, false);
    b.super_("IULIA.structure.Expression", 0x9a2567510ab846dfL, 0x90914d2e5bd895b0L, 0x466a47dd28405750L);
    b.origin("r:fdfa5c3c-8d64-4e59-a359-f071b87f87b9(IULIA.structure)/5073946945375000938");
    b.prop("value", 0x466a47dd28415986L, "5073946945375000966");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForStatement() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("IULIA", "Statement", 0x9a2567510ab846dfL, 0x90914d2e5bd895b0L, 0x466a47dd284057b9L);
    b.class_(false, false, false);
    b.origin("r:fdfa5c3c-8d64-4e59-a359-f071b87f87b9(IULIA.structure)/5073946945374934969");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForTypeName() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("IULIA", "TypeName", 0x9a2567510ab846dfL, 0x90914d2e5bd895b0L, 0x466a47dd284057f4L);
    b.class_(false, false, false);
    b.origin("r:fdfa5c3c-8d64-4e59-a359-f071b87f87b9(IULIA.structure)/5073946945374935028");
    b.prop("type", 0x466a47dd284057f5L, "5073946945374935029");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForVariable() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("IULIA", "Variable", 0x9a2567510ab846dfL, 0x90914d2e5bd895b0L, 0x466a47dd284057c1L);
    b.class_(false, false, false);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:fdfa5c3c-8d64-4e59-a359-f071b87f87b9(IULIA.structure)/5073946945374934977");
    b.aggregate("type", 0x466a47dd284057f1L).target(0x9a2567510ab846dfL, 0x90914d2e5bd895b0L, 0x466a47dd284057f4L).optional(false).ordered(true).multiple(false).origin("5073946945374935025").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForVariableDeclaration() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("IULIA", "VariableDeclaration", 0x9a2567510ab846dfL, 0x90914d2e5bd895b0L, 0x466a47dd28404d02L);
    b.class_(false, false, false);
    b.super_("IULIA.structure.Statement", 0x9a2567510ab846dfL, 0x90914d2e5bd895b0L, 0x466a47dd284057b9L);
    b.origin("r:fdfa5c3c-8d64-4e59-a359-f071b87f87b9(IULIA.structure)/5073946945374932226");
    b.aggregate("variable", 0x466a47dd284057ccL).target(0x9a2567510ab846dfL, 0x90914d2e5bd895b0L, 0x466a47dd284057c1L).optional(false).ordered(true).multiple(false).origin("5073946945374934988").done();
    b.aggregate("value", 0x466a47dd284057b5L).target(0x9a2567510ab846dfL, 0x90914d2e5bd895b0L, 0x466a47dd28405750L).optional(true).ordered(true).multiple(false).origin("5073946945374934965").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForVariableReference() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("IULIA", "VariableReference", 0x9a2567510ab846dfL, 0x90914d2e5bd895b0L, 0x466a47dd2841a202L);
    b.class_(false, false, false);
    b.super_("IULIA.structure.Expression", 0x9a2567510ab846dfL, 0x90914d2e5bd895b0L, 0x466a47dd28405750L);
    b.origin("r:fdfa5c3c-8d64-4e59-a359-f071b87f87b9(IULIA.structure)/5073946945375019522");
    b.associate("variable", 0x466a47dd2841a203L).target(0x9a2567510ab846dfL, 0x90914d2e5bd895b0L, 0x466a47dd28404d02L).optional(false).origin("5073946945375019523").done();
    return b.create();
  }
}
